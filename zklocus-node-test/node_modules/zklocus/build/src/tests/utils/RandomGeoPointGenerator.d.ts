/**
 * Represents a geographic point with latitude and longitude.
 */
export interface RandomGeoPoint {
    latitude: number;
    longitude: number;
}
export declare class RandomThreePointPolygon {
    private vertices;
    constructor(vertices: RandomGeoPoint[]);
    isEquals(other: RandomThreePointPolygon): boolean;
    toRandomGeoPoints(): RandomGeoPoint[];
}
/**
 * Generates random geographical points with specific precision constraints.
 */
export default class RandomGeoPointGenerator {
    private generatedTriangles;
    constructor();
    /**
     * Generates a random coordinate within the specified range and precision.
     * @param min The minimum value for the coordinate.
     * @param max The maximum value for the coordinate.
     * @param precision The number of decimal places.
     * @returns A random coordinate as a number.
     */
    static generateRandomCoordinate(min: number, max: number, precision: number): number;
    /**
     * Generates a random geographical point with a specified precision.
     * @returns A random GeoPoint object.
     */
    static generateRandomZKGeoPoint(): RandomGeoPoint;
    /**
     * Generates vertices for a triangle based on the given point and type.
     * @param point The reference point.
     * @param type The type of triangle to generate ('inside', 'outside', 'edge').
     * @param precision The precision for the vertices.
     * @returns An array of vertices (GeoPoint objects).
     */
    private static getTriangleVertices;
    static isPointInsideTriangle(point: RandomGeoPoint, triangle: RandomThreePointPolygon): boolean;
    /**
     * Generates a triangle polygon with the given point inside it.
     * @param point The point to be inside the triangle.
     * @returns A triangle polygon as an array of GeoPoints.
     */
    static generateTriangleWithPointInside(point: RandomGeoPoint): RandomThreePointPolygon;
    /**
     * Generates a triangle polygon with the given point outside it.
     * @param point The point to be outside the triangle.
     * @returns A triangle polygon as an array of GeoPoints.
     */
    static generateTriangleWithPointOutside(point: RandomGeoPoint): RandomThreePointPolygon;
    /**
     * Generates a triangle polygon with the given point on one of its edges.
     * @param point The point to be on the edge of the triangle.
     * @returns A triangle polygon as an array of GeoPoints.
     */
    static generateTriangleWithPointOnEdge(point: RandomGeoPoint): RandomThreePointPolygon;
    private checkAndStoreTriangle;
    generateTriangleWithPointInside(point: RandomGeoPoint): RandomThreePointPolygon;
    generateTriangleWithPointOutside(point: RandomGeoPoint): RandomThreePointPolygon;
    generateTriangleWithPointOnEdge(point: RandomGeoPoint): RandomThreePointPolygon;
}
