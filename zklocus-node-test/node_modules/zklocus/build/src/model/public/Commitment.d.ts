declare const GeoPointCommitment_base: (new (value: {
    geoPointHash: import("o1js/dist/node/lib/field").Field;
}) => {
    geoPointHash: import("o1js/dist/node/lib/field").Field;
}) & {
    _isStruct: true;
} & import("o1js/dist/node/snarky").ProvablePure<{
    geoPointHash: import("o1js/dist/node/lib/field").Field;
}> & {
    toInput: (x: {
        geoPointHash: import("o1js/dist/node/lib/field").Field;
    }) => {
        fields?: import("o1js/dist/node/lib/field").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/field").Field, number][] | undefined;
    };
    toJSON: (x: {
        geoPointHash: import("o1js/dist/node/lib/field").Field;
    }) => {
        geoPointHash: string;
    };
    fromJSON: (x: {
        geoPointHash: string;
    }) => {
        geoPointHash: import("o1js/dist/node/lib/field").Field;
    };
    empty: () => {
        geoPointHash: import("o1js/dist/node/lib/field").Field;
    };
};
export declare class GeoPointCommitment extends GeoPointCommitment_base {
    toString(): string;
}
declare const MetadataGeoPointCommitment_base: (new (value: {
    geoPointHash: import("o1js/dist/node/lib/field").Field;
    metadataHash: import("o1js/dist/node/lib/field").Field;
}) => {
    geoPointHash: import("o1js/dist/node/lib/field").Field;
    metadataHash: import("o1js/dist/node/lib/field").Field;
}) & {
    _isStruct: true;
} & import("o1js/dist/node/snarky").ProvablePure<{
    geoPointHash: import("o1js/dist/node/lib/field").Field;
    metadataHash: import("o1js/dist/node/lib/field").Field;
}> & {
    toInput: (x: {
        geoPointHash: import("o1js/dist/node/lib/field").Field;
        metadataHash: import("o1js/dist/node/lib/field").Field;
    }) => {
        fields?: import("o1js/dist/node/lib/field").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/field").Field, number][] | undefined;
    };
    toJSON: (x: {
        geoPointHash: import("o1js/dist/node/lib/field").Field;
        metadataHash: import("o1js/dist/node/lib/field").Field;
    }) => {
        geoPointHash: string;
        metadataHash: string;
    };
    fromJSON: (x: {
        geoPointHash: string;
        metadataHash: string;
    }) => {
        geoPointHash: import("o1js/dist/node/lib/field").Field;
        metadataHash: import("o1js/dist/node/lib/field").Field;
    };
    empty: () => {
        geoPointHash: import("o1js/dist/node/lib/field").Field;
        metadataHash: import("o1js/dist/node/lib/field").Field;
    };
};
export declare class MetadataGeoPointCommitment extends MetadataGeoPointCommitment_base {
    toString(): string;
}
export {};
