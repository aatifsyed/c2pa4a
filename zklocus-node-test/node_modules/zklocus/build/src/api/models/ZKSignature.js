var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Signature } from "o1js";
import ZKSignatureToSignatureAdopter from "../adopters/ZKSignatureToSignatureAdopter";
let ZKSignature = class ZKSignature {
    constructor(signatureOrBase58) {
        if (typeof signatureOrBase58 === "string") {
            this.signature = Signature.fromBase58(signatureOrBase58);
        }
        else {
            this.signature = signatureOrBase58;
        }
        this._raw = signatureOrBase58;
    }
    get raw() {
        return this._raw;
    }
    get normalized() {
        return this.signature;
    }
    toBase58() {
        return this.signature.toBase58();
    }
    verify(publicKey, msg) {
        return this.signature.verify(publicKey, msg).toBoolean();
    }
};
ZKSignature = __decorate([
    ZKSignatureToSignatureAdopter,
    __metadata("design:paramtypes", [Object])
], ZKSignature);
export { ZKSignature };
//# sourceMappingURL=ZKSignature.js.map