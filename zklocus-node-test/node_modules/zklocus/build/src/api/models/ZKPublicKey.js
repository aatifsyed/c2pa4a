var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Poseidon, PublicKey } from "o1js";
import ZKPublicKeyToPublicKeyAdopter from "../adopters/ZKPublicKeyToPublicKeyAdopter";
import { ZKKeyPair } from "./ZKKeyPair";
let ZKPublicKey = class ZKPublicKey extends ZKKeyPair {
    constructor(publicKeyOrBase58) {
        super();
        if (typeof publicKeyOrBase58 === "string") {
            this.key = PublicKey.fromBase58(publicKeyOrBase58);
        }
        else {
            this.key = publicKeyOrBase58;
        }
        this._raw = publicKeyOrBase58;
    }
    hash() {
        const pubKeyAsFields = this.key.toFields();
        return Poseidon.hash(pubKeyAsFields);
    }
    get raw() {
        return this._raw;
    }
    get normalized() {
        return this.key;
    }
    verifyPrivateKey(zkPrivateKey) {
        return this.key.toBase58() === zkPrivateKey.toPublicKey().toBase58();
    }
};
ZKPublicKey = __decorate([
    ZKPublicKeyToPublicKeyAdopter,
    __metadata("design:paramtypes", [Object])
], ZKPublicKey);
export { ZKPublicKey };
//# sourceMappingURL=ZKPublicKey.js.map