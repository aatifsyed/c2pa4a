import type { GeoPoint } from "../../model/Geography";
import { ThreePointPolygon } from "../../model/Geography";
import type { ZKThreePointPolygon } from "../models/ZKThreePointPolygon";
import type { ZKGeoPoint } from "../models/ZKGeoPoint";
export default function <T extends new (...args: any[]) => ZKThreePointPolygon>(Base: T): {
    new (...args: any[]): {
        rawValue(): [ZKGeoPoint, ZKGeoPoint, ZKGeoPoint];
        normalizedValue(): [GeoPoint, GeoPoint, GeoPoint];
        toZKValue(): ThreePointPolygon;
        _vertices: [ZKGeoPoint, ZKGeoPoint, ZKGeoPoint];
        readonly vertices: [ZKGeoPoint, ZKGeoPoint, ZKGeoPoint];
        readonly factor: number;
        isEquals(other: ZKThreePointPolygon): boolean;
        hash(): import("o1js/dist/node/lib/field").Field;
        combinedHash(elements: ZKThreePointPolygon[]): import("o1js/dist/node/lib/field").Field;
        toString(): string;
    };
} & T;
